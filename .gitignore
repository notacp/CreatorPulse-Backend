# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# FastAPI specific
.pytest_cache/
*.db

# Environment variables
.env
.env.local
.env.development
.env.production
.env.test

# IDE specific files
.vscode/
.idea/
*.swp
*.swo
*~

# OS specific files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Docker
.dockerignore
docker-compose.override.yml

# Logs
*.log
logs/

# Database
*.db
*.sqlite
*.sqlite3

# Temporary files
*.tmp
*.temp
tmp/
temp/

# API Keys and Secrets (extra protection)
*key*
*secret*
*token*
*.pem
*.key
*.crt

# Test files and test data
test_*.py.backup
*_test_backup*
test_data/
test_output/

# Backup files
*.bak
*.backup
*~

# Coverage reports
.coverage
coverage.xml
htmlcov/

# Profiling
*.prof

# Local development
local/
.local/

# Runtime files
*.pid
*.sock

# Redis dump files
dump.rdb

# Celery beat schedule file
celerybeat-schedule.db

# Alembic migration files (if using Alembic)
# alembic/versions/*.py

# Jupyter notebooks (if any)
*.ipynb

# Virtual environment directories
venv*/
env*/
.venv*/

# Python wheel files
*.whl

# Local configuration overrides
local_config.py
config_local.py

# Documentation builds
docs/build/
docs/_build/

# Temporary test scripts (keep our main test files)
test_temp_*.py
temp_test_*.py
debug_temp_*.py

# Step-specific test files (keep the main ones, ignore temporary backups)
*_backup.py
*_old.py
*_temp.py

# Created summary files (these can be regenerated)
STEP*_SUMMARY.md

# Local database files
*.db-journal
*.db-wal
*.db-shm

# Local development scripts
run_local.py
debug_local.py
local_*.py
